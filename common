#!/usr/bin/env bash

# Copyright (C) Harsh Shandilya <me@msfjarvis.dev>
# SPDX-License-Identifier: MIT

# Import all the bot tokens and IDs
# shellcheck disable=SC1090
source ~/.secretcreds 2>/dev/null

CL_BOLD="\033[1m"
CL_INV="\033[7m"
CL_RED="\033[01;31m"
CL_RST="\033[0m"
CL_YLW="\033[01;33m"
CL_BLUE="\033[01;34m"

# To shut shellcheck up
export CL_BOLD CL_INV CL_RED CL_RST CL_YLW CL_BLUE

# Prints a formatted header to let the user know what's being done
# SC2034: i appears unused. Verify it or export it.
function echoText() {
  echo -e "${CL_RED}"
  echo -e "${CL_BOLD}"
  echo -e "====$(for i in $(seq ${#1}); do echo -e "=\c"; done)===="
  echo -e "==  ${1}  =="
  echo -e "====$(for i in $(seq ${#1}); do echo -e "=\c"; done)===="
  echo -e "${CL_RST}"
}

# Prints an error in bold red
function reportError() {
  echo -e ""
  echo -e "${CL_RED}${1:?}${CL_RST}"
  if [ -z "${2-}" ]; then
    echo -e ""
  fi
  return 1
}

# Prints a warning in bold yellow
function reportWarning() {
  echo -e ""
  echo -e "${CL_YLW}${1:?}${CL_RST}"
  if [ -z "${2-}" ]; then
    echo -e ""
  fi
}

# Prints the success banner
# SC2034: i appears unused. Verify it or export it.
function reportSuccess() {
  echo -e "${CL_GRN}"
  echo -e "${CL_BOLD}"
  echo -e "====$(for i in $(seq ${#1}); do
    echo -e "=\c"
    echo "${i}" >/dev/null
  done)===="
  echo -e "==  ${1}  =="
  echo -e "====$(for i in $(seq ${#1}); do
    echo -e "=\c"
    echo "${i}" >/dev/null
  done)===="
  echo -e "${CL_RST}"
}

# Prints out a given URL and optional link text as a hyperlink
function url() {
  local URL TEXT
  URL="${1:?}"
  TEXT="${2:-Link text}"
  if [[ ! ${URL} =~ :// ]]; then
    URL="https://${URL}"
  fi
  echo -e "\e]8;;${URL}\a${TEXT}\e]8;;\a"
}

function banner() {
  local s=("$@") b w
  echo -e "${CL_RED}"
  echo -e "${CL_BOLD}"
  for l in "${s[@]}"; do
    ((w < ${#l})) && {
      b="$l"
      w="${#l}"
    }
  done
  echo "##${b//?/#}##
# ${b//?/ } #"
  for l in "${s[@]}"; do
    printf '# %*s #\n' "-$w" "$l"
  done
  echo "# ${b//?/ } #
##${b//?/#}##"
  echo -e "${CL_RST}"
}

# Check if array contains element
# Taken from https://stackoverflow.com/a/8574392
function containsElement() {
  local e match="$1"
  shift
  for e; do [[ $e == "$match" ]] && return 0; done
  return 1
}
