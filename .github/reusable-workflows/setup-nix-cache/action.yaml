name: 'Setup Attic cache'
description: 'Set up Tailscale and Attic to enable automatic caching for Nix Store'
inputs:
  ts-oauth-client-id:
    description: 'Your Tailscale OAuth Client ID.'
    required: true
  ts-oauth-secret:
    description: 'Your Tailscale OAuth Client Secret.'
    required: true
  attic-cache:
    description: 'Name of Attic cache'
    required: true
  attic-endpoint:
    description: 'URL of the Attic server'
    required: true
  attic-public-key:
    description: 'Public key for the Attic cache'
    required: true
  attic-token:
    description: 'Auth token for Attic'
    required: true
runs:
  using: "composite"
  steps:
    - name: Install Nix
      shell: bash
      run: |
        curl --proto '=https' --tlsv1.2 -sSf -L https://install.lix.systems/lix | sh -s -- install --no-confirm --extra-conf "
          trusted-users = $(whoami)
        "
    - name: Setup Tailscale
      uses: tailscale/github-action@8688eb839e58e6b25c1ae96cd99d1c173299b842 # v3
      with:
        oauth-client-id: ${{ inputs.ts-oauth-client-id }}
        oauth-secret: ${{ inputs.ts-oauth-secret }}
        tags: "tag:github-actions"
        version: latest
    - name: Add nixpkgs-unstable channel
      shell: bash
      run: |
        nix-channel --add https://github.com/msfjarvis/nixpkgs/archive/"$(jq -r .nodes.nixpkgs.locked.rev flake.lock)".tar.gz nixpkgs
        nix-channel --update
    - name: Set up Attic
      shell: bash
      run: |
        mkdir -p ~/.config/nix
        echo "machine $ENDPOINT" >> ~/.config/nix/netrc
        echo "password $TOKEN" >> ~/.config/nix/netrc
        echo "netrc-file = $HOME/.config/nix/netrc" >> ~/.config/nix/nix.conf
        nix profile install \
          --option extra-substituters "https://$ENDPOINT/$CACHE" \
          --option extra-trusted-public-keys "$PUBLIC_KEY" \
          "github:msfjarvis/nixpkgs?rev=b4524458384b11dbc4bd46900afe0a02c4b1d16f#attic-client"
        attic login --set-default ci "https://$ENDPOINT" "$TOKEN"
        attic use "$CACHE"
      env:
        CACHE: ${{ inputs.attic-cache }}
        ENDPOINT: ${{ inputs.attic-endpoint }}
        PUBLIC_KEY: ${{ inputs.attic-public-key }}
        TOKEN: ${{ inputs.attic-token }}
    - name: Set up remote builder
      shell: bash
      run: |
        sudo mkdir -p /etc/nix/ /root/.ssh/
        printf '%s\n' 'ssh-ng://melody aarch64-linux - 2 2 big-parallel,kvm - -' | sudo tee -a /etc/nix/machines
        printf '%s\n' 'melody ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOd+qst3bY4ru0zaIGf/wHhRVfXfg4QenF/uFSU/rk/+' | sudo tee -a /root/.ssh/known_hosts
