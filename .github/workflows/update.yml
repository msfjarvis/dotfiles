on:
  repository_dispatch:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to check updates for'
        required: false
      version:
        description: 'Version to pin package to'
        required: false

name: Check for package updates
jobs:
  check-nix-update:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@8cdf194da984e4f12b2f8c36d1fa107c1dd67f5c # v11

    - name: Set up Magic Nix Cache
      uses: DeterminateSystems/magic-nix-cache-action@87e8236f46702ab0ce5a058b605a173ec88d618e # v6

    - name: Set Git user and email
      run: |
        git config user.name "GitHub Actions"
        git config user.email noreply@github.com

    - name: Check pre-update Git ref
      run: |
        echo "OLD_REF=$(git rev-parse HEAD)" >> "$GITHUB_ENV"

    - name: Check for updates of given package
      if: "github.event.inputs.package != null || github.event.action == 'package-bump'"
      run: nix-shell -p nix-update git --run './update.sh ${{ github.event.inputs.package || github.event.client_payload.package_name }} ${{ github.event.inputs.version }}'

    - name: Check for updates
      if: "github.event.inputs.package == null"
      run: nix-shell -p nix-update git --run ./update.sh

    - name: Check post-update Git ref
      run: |
        echo "NEW_REF=$(git rev-parse HEAD)" >> "$GITHUB_ENV"

    - name: Push to main branch
      if: env.OLD_REF != env.NEW_REF
      shell: bash
      run: |
        git push origin main
