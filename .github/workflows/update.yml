on:
  repository_dispatch:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to check updates for'
        required: false
      version:
        description: 'Version to pin package to'
        required: false
name: Check for package updates
jobs:
  check-nix-update:
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            cache: x86_64-linux
          - runner: buildjet-4vcpu-ubuntu-2204-arm
            cache: aarch64-linux
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Install Nix
        uses: cachix/install-nix-action@9f70348d77d0422624097c4b7a75563948901306 # v29
      - name: Add nixpkgs-unstable channel
        shell: bash
        run: |
          nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs
          nix-channel --update
      - name: Setup Tailscale
        uses: tailscale/github-action@4e4c49acaa9818630ce0bd7a564372c17e33fb4d # v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: "tag:github-actions"
      - name: Setup Attic cache
        uses: ryanccn/attic-action@618a980988d704a7709daeea88526146acd1d45f # v0
        with:
          endpoint: ${{ secrets.ATTIC_ENDPOINT }}
          cache: ${{ matrix.cache }}
          token: ${{ secrets.ATTIC_TOKEN }}
      - name: Set Git user and email
        shell: bash
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com
      - name: Check pre-update Git ref
        shell: bash
        run: |
          echo "OLD_REF=$(git rev-parse HEAD)" >> "$GITHUB_ENV"
      - name: Check for updates of given package
        shell: bash
        if: "github.event.inputs.package != null || github.event.action == 'package-bump'"
        run: nix-shell -p nix-update git --run './update.sh ${{ github.event.inputs.package || github.event.client_payload.package_name }} ${{ github.event.inputs.version }}'
      - name: Check for updates
        shell: bash
        if: "github.event.inputs.package == null"
        run: nix-shell -p nix-update git --run ./update.sh
      - name: Check post-update Git ref
        shell: bash
        run: |
          echo "NEW_REF=$(git rev-parse HEAD)" >> "$GITHUB_ENV"
      - name: Push to main branch
        if: "env.OLD_REF != env.NEW_REF && matrix.runner == 'ubuntu-latest'"
        shell: bash
        run: |
          git push origin main
