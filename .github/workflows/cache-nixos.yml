on:
  workflow_dispatch:
  # schedule:
  #   - cron: '35 3 * * 0'
name: Build and cache NixOS configuration
jobs:
  build-and-cache:
    strategy:
      fail-fast: false
      matrix:
        include:
          - cache: aarch64-linux
            runner: buildjet-4vcpu-ubuntu-2204-arm
            target: wailord
            public-key: "aarch64-linux:czBXxHtNIDorynmG/2pRuFSENM+fnu0rgVkH+8I4niQ="
          - cache: x86_64-linux
            runner: buildjet-4vcpu-ubuntu-2204
            target: ryzenbox
            public-key: "x86_64-linux:HLQszdZAPt0hy6dsMxsI7EDeghCzfSwB8VyBEnei/j0="
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
      - name: Install Nix
        uses: cachix/install-nix-action@08dcb3a5e62fa31e2da3d490afc4176ef55ecd72 # v30
      - name: Add nixpkgs-unstable channel
        shell: bash
        run: |
          nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs
          nix-channel --update
      - name: Setup Tailscale
        uses: tailscale/github-action@4e4c49acaa9818630ce0bd7a564372c17e33fb4d # v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: "tag:github-actions"
      - name: Set up Attic
        shell: bash
        run: |
          mkdir -p ~/.config/nix
          echo "machine $ENDPOINT" >> ~/.config/nix/netrc
          echo "password $TOKEN" >> ~/.config/nix/netrc
          echo "netrc-file = $HOME/.config/nix/netrc" >> ~/.config/nix/nix.conf
          nix profile install \
            --option extra-substituters "https://$ENDPOINT/$CACHE" \
            --option extra-trusted-public-keys "$PUBLIC_KEY" \
            "github:msfjarvis/nixpkgs?rev=dcddeb9f100da0d198b2a459667f6e4a7824cbb4#attic-client"
          attic login --set-default ci "https://$ENDPOINT" "$TOKEN"
          attic use "$CACHE"
        env:
          CACHE: ${{ matrix.cache }}
          ENDPOINT: ${{ secrets.ATTIC_ENDPOINT }}
          PUBLIC_KEY: ${{ matrix.public-key }}
          TOKEN: ${{ secrets.ATTIC_TOKEN }}
      - name: Build NixOS configuration
        shell: bash
        run: nix build .#nixosConfigurations.${{ matrix.target }}.config.system.build.toplevel
      - name: Push to attic cache
        shell: bash
        run: |
          attic push --jobs $(nproc) --filter '^((steam|appimage)-run|(nvidia|android-studio|firefox-nightly-bin).*)$' "${CACHE}" ./result
        env:
          CACHE: ${{ matrix.cache }}
