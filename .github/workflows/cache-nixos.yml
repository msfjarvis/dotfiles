on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'
permissions:
  actions: write
name: Build and cache NixOS configuration
jobs:
  build-and-cache:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: matara
            runner: ubuntu-latest
            cache: x86_64-linux
            public-key: "x86_64-linux:7L1XuoniEc65yX3tVGjkNyNadfePhfMD+TxodWdZtgM="
          - target: melody
            runner: ubuntu-24.04-arm
            cache: aarch64-linux
            public-key: "aarch64-linux:6ntU2NXXz/mVNFqypWKVCkGZa9STsUzyc2ThpqQwP5k="
          - target: wailord
            runner: ubuntu-24.04-arm
            cache: aarch64-linux
            public-key: "aarch64-linux:6ntU2NXXz/mVNFqypWKVCkGZa9STsUzyc2ThpqQwP5k="
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - name: Setup Nix and Attic
        uses: msfjarvis/dotfiles/.github/reusable-workflows/setup-nix-cache@main
        with:
          ts-oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          ts-oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          attic-cache: ${{ matrix.cache }}
          attic-public-key: ${{ matrix.public-key }}
          attic-endpoint: ${{ secrets.ATTIC_ENDPOINT }}
          attic-token: ${{ secrets.ATTIC_TOKEN }}
      - name: Create disk space
        if: "${{ matrix.runner == 'ubuntu-latest' }}"
        uses: xd009642/ci-hoover@main
      - name: Update nixpkgs
        if: "${{ github.event_name == 'schedule' }}"
        shell: bash
        run: nix flake update nixpkgs
      - name: Build NixOS configuration
        shell: bash
        run: nix build --print-build-logs .#nixosConfigurations.${{ matrix.target }}.config.system.build.toplevel
      - name: Push to attic cache
        shell: bash
        run: |
          attic push --jobs 1 --filter '^((steam|appimage)-(run|fhs)(-run)?|(google-chrome|nvidia|android-studio|firefox-nightly-bin).*)$' "${CACHE}" ./result
        env:
          CACHE: ${{ matrix.cache }}
