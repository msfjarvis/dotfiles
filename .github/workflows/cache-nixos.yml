on:
  workflow_dispatch:
  schedule:
    - cron: '35 3 * * 0'
name: Build and cache NixOS configuration
jobs:
  build-and-cache:
    strategy:
      fail-fast: false
      matrix:
        include:
          - cache: aarch64-linux
            runner: buildjet-4vcpu-ubuntu-2204-arm
            target: wailord
            extra-build-flags: --max-jobs 1
          - cache: x86_64-linux
            runner: buildjet-4vcpu-ubuntu-2204
            target: ryzenbox
            extra-build-flags: ''
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Install Nix
        uses: cachix/install-nix-action@08dcb3a5e62fa31e2da3d490afc4176ef55ecd72 # v30
      - name: Add nixpkgs-unstable channel
        shell: bash
        run: |
          nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs
          nix-channel --update
      - name: Setup Tailscale
        uses: tailscale/github-action@4e4c49acaa9818630ce0bd7a564372c17e33fb4d # v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: "tag:github-actions"
      - name: Setup Attic cache
        shell: bash
        run: |
          curl -fsSL https://raw.githubusercontent.com/zhaofengli/attic/main/.github/install-attic-ci.sh | bash -s
          attic login --set-default "${CACHE}" "${ENDPOINT}" "${TOKEN}"
          attic use "${CACHE}"
        env:
          ENDPOINT: ${{ secrets.ATTIC_ENDPOINT }}
          CACHE: ${{ matrix.cache }}
          TOKEN: ${{ secrets.ATTIC_TOKEN }}
      - name: Build NixOS configuration
        shell: bash
        run: nix build $FLAGS .#nixosConfigurations.${{ matrix.target }}.config.system.build.toplevel
        env:
          FLAGS: ${{ matrix.extra-build-flags }}
      - name: Push store paths to Attic
        shell: bash
        run: attic push "${CACHE}" ./result
        env:
          CACHE: ${{ matrix.cache }}
