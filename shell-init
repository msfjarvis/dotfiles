#!/usr/bin/env bash

# Copyright (C) Harsh Shandilya <me@msfjarvis.dev>
# SPDX-License-Identifier: MIT

SCRIPT_DIR="$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)"
export SCRIPT_DIR

# SDKMAN!
export SDKMAN_DIR="${HOME}/.sdkman"
# shellcheck disable=SC1091
[[ -s "${SDKMAN_DIR}/bin/sdkman-init.sh" ]] && source "${SDKMAN_DIR}/bin/sdkman-init.sh"

# cargo env
# shellcheck disable=SC1091
if [ -f "${HOME}"/.cargo/env ]; then
  source "${HOME}"/.cargo/env
elif [ -d "${HOME}"/.cargo/bin ]; then
  export PATH="${HOME}/.cargo/bin:${PATH}"
fi

# Local bin directory
[ -d "${HOME}/bin" ] && export PATH="${HOME}/bin:${PATH}"

# Flutter
if [ -d "${ANDROID_SDK_ROOT/Sdk/flutter}" ]; then
  FLUTTER_DIR="${ANDROID_SDK_ROOT/Sdk/flutter}"
  export PATH="${FLUTTER_DIR}/bin:${FLUTTER_DIR}/.pub-cache/bin:${PATH}"
fi

# Shell PS1
# shellcheck disable=SC2154
export PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]: \[\033[01;34m\]\W\[\033[00m\]$(__git_ps1 " (%s)") \$ '

# Set ccache dir
export CCACHE_DIR="${HOME}/.ccache"

if [ -d /mnt/mediahell/.gradle ]; then
  export GRADLE_USER_HOME="/mnt/mediahell/.gradle"
fi

# Nix installer
# shellcheck disable=SC1091
if [ -e "${HOME}"/.nix-profile/etc/profile.d/nix.sh ]; then
  source "${HOME}"/.nix-profile/etc/profile.d/nix.sh
fi

# Android env variables
if [ -d /mnt/mediahell/Android/Sdk ]; then
  export ANDROID_SDK_ROOT=/mnt/mediahell/Android/Sdk
  export PATH="${ANDROID_SDK_ROOT}/platform-tools:${PATH}"
  if [ -d "${ANDROID_SDK_ROOT}"/build-tools ]; then
    BUILD_TOOLS_DIR="$(fd -td --maxdepth 1 . "${ANDROID_SDK_ROOT}"/build-tools | sort -nr | head -n1)"
    export PATH="${BUILD_TOOLS_DIR}:${PATH}"
  fi
  if [ -d "${ANDROID_SDK_ROOT}"/cmdline-tools/latest ]; then
    export PATH="${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin:${PATH}"
  fi
fi

# Sexy colors in `ls`
if type vivid &>/dev/null; then
  LS_COLORS="$(vivid generate molokai)"
  export LS_COLORS
fi

# Bash completion
# shellcheck disable=SC1090
if [ -d "${HOME}"/bash_completion.d ]; then
  for COMPLETION in "${HOME}/bash_completion.d/"*; do
    # shellcheck disable=SC1090
    [[ -r $COMPLETION ]] && source "$COMPLETION"
  done
fi

if [ -d "${HOME}"/.nix-profile/etc/bash_completion.d ]; then
  for COMPLETION in "${HOME}/.nix-profile/etc/bash_completion.d/"*; do
    # shellcheck disable=SC1090
    [[ -r $COMPLETION ]] && source "$COMPLETION"
  done
fi

# Enable pass user extensions
if type pass &>/dev/null; then
  export PASSWORD_STORE_ENABLE_EXTENSIONS=true
fi

# Nano love, or is it?
if type micro &>/dev/null; then
  export EDITOR=micro
  export MICRO_TRUECOLOR=1
else
  export EDITOR=micro
fi

# Setup zoxide
if type zoxide &>/dev/null; then
  alias cd=z
fi

# Setup mcfly
if type mcfly &>/dev/null; then
  eval "$(mcfly init bash)"
fi

# Mitigation against CVE-2022-24765 in Git
# https://github.blog/2022-04-12-git-security-vulnerability-announced/
export GIT_CEILING_DIRECTORIES="${HOME}"

# Clipboard and other system-specific functions
read -r PROCVER </proc/version
if [[ ${PROCVER} =~ microsoft ]]; then
  # shellcheck source=system_wsl
  source "${SCRIPT_DIR}"/system_wsl
else
  # shellcheck source=system_linux
  source "${SCRIPT_DIR}"/system_linux
fi
unset PROCVER

# Spicetify
if [ -d "${HOME}/.spicetify" ]; then
  export PATH="${PATH}:${HOME}/.spicetify"
fi

# shellcheck source=bash_completions.bash
source "${SCRIPT_DIR}"/bash_completions.bash
# shellcheck source=aliases
source "${SCRIPT_DIR}"/aliases
# shellcheck source=apps
source "${SCRIPT_DIR}"/apps
# shellcheck source=common
source "${SCRIPT_DIR}"/common
# shellcheck source=devtools
source "${SCRIPT_DIR}"/devtools
# shellcheck source=files
source "${SCRIPT_DIR}"/files
# shellcheck source=gitshit
source "${SCRIPT_DIR}"/gitshit
# shellcheck source=minecraft
source "${SCRIPT_DIR}"/minecraft
# shellcheck source=nix
source "${SCRIPT_DIR}"/nix
# shellcheck source=server
source "${SCRIPT_DIR}"/server
# shellcheck source=system
source "${SCRIPT_DIR}"/system
# shellcheck source=wireguard
source "${SCRIPT_DIR}"/wireguard

function reload() {
  # shellcheck disable=SC1090
  source ~/.bashrc
}
