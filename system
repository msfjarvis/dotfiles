#!/usr/bin/env bash

# Copyright (C) Harsh Shandilya <me@msfjarvis.dev>
# SPDX-License-Identifier: MIT
# shellcheck source=server
source "${SCRIPT_DIR}"/server

[ -z "${GPG_TTY}" ] && {
  GPG_TTY="$(tty)"
  export GPG_TTY
}

function encrypt() {
  [ -z "${1}" ] && return
  gpg --encrypt --output "$(basename "${1}")".gpg --recipient "me@msfjarvis.dev" "${1}"
}

function apt-history() {
  case "$1" in
    install)
      grep 'install ' /var/log/dpkg.log
      ;;
    upgrade | remove)
      grep "$1" /var/log/dpkg.log
      ;;
    rollback)
      grep upgrade /var/log/dpkg.log |
        grep "$2" -A10000000 |
        grep "$3" -B10000000 |
        awk '{print $4"="$5}'
      ;;
    *)
      cat /var/log/dpkg.log
      ;;
  esac
}

function pkgdiff() {
  comm -13 <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort) <(
    comm -23 \
      <(dpkg-query -W -f='${Package}\n' | sed 1d | sort) \
      <(apt-mark showauto | sort)
  )
}

function endtask() {
  for pid in $(pgrep "${1:?}"); do kill -9 "${pid}" 2>/dev/null; done
}

function cpuinfo() {
  grep -E '^model name|^cpu MHz' /proc/cpuinfo
}

function venv() {
  local NEW_INSTALL
  if [ ! -d venv ]; then
    NEW_INSTALL=true
    python"${1:-3}" -m venv venv
  fi
  source venv/bin/activate
  if [ -f requirements.txt ] && [ -n "${NEW_INSTALL}" ]; then
    pip install -r requirements.txt
  fi
}
