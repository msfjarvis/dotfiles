#!/usr/bin/env bash

# Copyright (C) Harsh Shandilya <me@msfjarvis.dev>
# SPDX-License-Identifier: MIT

function nixpatch() {
  [ -z "${1}" ] && return
  local glibc_path
  glibc_path="$(nix eval --raw nixpkgs#glibc.outPath)"
  comma patchelf --set-interpreter "${glibc_path}/lib/ld-linux-x86-64.so.2" "${1}"
}

function nixdiff() {
  local CUR_GEN OLD_GEN
  case "$(uname)" in
    "Darwin")
      CUR_GEN="$(fd -j1 --max-depth 1 -tl system- /nix/var/nix/profiles/ | tail -n1)"
      OLD_GEN="$(fd -j1 --max-depth 1 -tl system- /nix/var/nix/profiles/ | tail -n2 | head -n1)"
      ;;
    "Linux")
      if [[ -n "$(command -v home-manager)" ]]; then
        CUR_GEN="$(fd -j1 --max-depth 1 -tl home-manager- ~/.local/state/nix/profiles/ | tail -n1)"
        OLD_GEN="$(fd -j1 --max-depth 1 -tl home-manager- ~/.local/state/nix/profiles/ | head -n1)"
      else
        GEN_COUNT="$(($(nixos-rebuild --fast list-generations --json | jq length)))"
        if [[ $GEN_COUNT -ge 2 || -d ./result ]]; then
          CUR_GEN_NUM="$(nixos-rebuild --fast list-generations --json | jq .[0].generation)"
          OLD_GEN_NUM="$(nixos-rebuild --fast list-generations --json | jq .[1].generation)"
          CUR_GEN="/nix/var/nix/profiles/system-${CUR_GEN_NUM}-link"
          OLD_GEN="/nix/var/nix/profiles/system-${OLD_GEN_NUM}-link"
        else
          echoText "No generations to diff"
          return
        fi
      fi
      ;;
  esac
  if [ -d ./result ]; then
    OLD_GEN="${CUR_GEN}"
    CUR_GEN=./result
  fi
  nvd diff "${OLD_GEN}" "${CUR_GEN}"
}

function nixb() {
  nix flake update --commit-lock-file
}

function cache() {
  declare -a CACHE_PATHS
  local ARCH KERNEL
  CACHE_PATHS=("$@")
  ARCH="$(uname -m)"
  KERNEL="$(uname --kernel-name | tr '[:upper:]' '[:lower:]')"
  attic push "${ARCH}-${KERNEL}" "${CACHE_PATHS[@]:?}"
}
